webpackJsonp([0xc20b7e8bf5c2],{404:function(t,s){t.exports={data:{markdownRemark:{html:'<p>In the previous article <a href="/go-quickstart.html"><code class="gatsby-code-text">Golang Quickstart</code></a>, we saw how to index new data and stream both individual data as well as query results. Now, we shall go ahead and explore some complex queries with <code class="gatsby-code-text">ElasticSearch</code> using our <a href="https://godoc.org/github.com/appbaseio/go-appbase/"><code class="gatsby-code-text">go-appbase</code> library</a>.</p>\n<p>For this tutorial, we will use an app called <code class="gatsby-code-text">gitxplore-live</code>. The credentials for this app are <code class="gatsby-code-text">2FPZ2UJQW:1c50c6df-4652-4d74-906b-7bc0a6a731b6</code>.</p>\n<p>You can browse the appâ€™s data by clicking the image below.</p>\n<p><a href="https://appbaseio.github.io/dejavu/live/#?input_state=XQAAAAKvAQAAAAAAAAA9iIqnY-B2BnTZGEQz6wkFsXzANcEiOj1t75YJPmGw7xeXjnOyOKwcTIJQljSmiDlmnS0idduXRCWx36R0WY9_Vp2OeiWvs5xdlMjiRDDupmmjgc5kXonz8uq6m2RqZAJEc_g63epaXm2VZJ6P017RqXwhNW50YP02uGPJzw_wlnNHejyw3A55t32cUtVwYDVOtKa99NwNlFHAdl3uj_6iHw3B-0vHqDKRryA5CsywM3FCsu23ODTNzechJe-gmxprZA9mVWAEtVsHlY2xwiEtAoUv2y01q-PbwwQRWgvPawZOg_2FMxpSdtTlo3pM6GtNC58SfDg-9XlSibEGCXddBtwfsFtLe__m9Bxxb4Ko1ga01UaH5Ww5n5_KJWXsgh17HlNH_vawxqo"><img src="https://i.imgur.com/Pvh2btF.png" alt="Image"></a></p>\n<h2 id="date-range-query"><a href="#date-range-query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Date Range Query</h2>\n<p>When we need to query all documents in a particular range of dates we use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-range-query.html"><code class="gatsby-code-text">range</code></a> clause. See the example below to understand how it works.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go">client<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> appbase<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span><span class="token string">"https://scalr.api.appbase.io"</span><span class="token punctuation">,</span> <span class="token string">"2FPZ2UJQW"</span><span class="token punctuation">,</span> <span class="token string">"1c50c6df-4652-4d74-906b-7bc0a6a731b6"</span><span class="token punctuation">,</span> <span class="token string">"gitxplore-live"</span><span class="token punctuation">)</span>\nerr <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>\n\tlog<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nfmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Client created"</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> testtype <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">"gitxplore-live"</span>\n<span class="token keyword">const</span> dateQuery <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">`{\n\t"query": {\n\t\t"range" : {\n\t\t\t"created" : {\n\t\t\t\t"gte" : "2015-10-29T14:37:16Z",\n\t\t\t\t"lte" : "2017-10-29T14:37:16Z"\n\t\t\t}\n\t\t}\n\t}\n}`</span>\n\nsearchResponse<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span>testtype<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Body</span><span class="token punctuation">(</span>dateQuery<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>\n\tlog<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span>\n<span class="token punctuation">}</span>\nfmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Total Hits for the range of dates is: "</span><span class="token punctuation">,</span> searchResponse<span class="token punctuation">.</span>Hits<span class="token punctuation">.</span>TotalHits<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go">searchResponse<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n\tTotal Hits <span class="token keyword">for</span> the <span class="token keyword">range</span> of dates is<span class="token punctuation">:</span> <span class="token number">4684</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><code class="gatsby-code-text">Note:</code> To print the document as well you need to add the following lines to the code:</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go">document<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">MarshalIndent</span><span class="token punctuation">(</span><span class="token operator">*</span>searchResponse<span class="token punctuation">.</span>Hits<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"  "</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>\n\tlog<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nfmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p>Play with <code class="gatsby-code-text">Date Range</code> query on <a href="https://appbaseio.github.io/mirage/#?input_state=XQAAAAKjDAAAAAAAAAA9iIhnNAWbsswtYjeQNZkpzQK4_mOzUeDpWmFX40My38I2h2kWQlEdacvCMz6CtrX2pl2yy1LFtI8PefTkjddNtb1d4yacMv2ni8qYGp6yBtb_-oP0y6NadalvEMEYzWi_LqQ9mRe7P0mnWEZnms4MVU1rDLGSaeM2Mz8PnBpHlB8ozXiqBjd1HlXOyeHMn5YveDpjt6BIMyLyGa2t8hZgMVZjYLCqQfjpLtkwgaEOmm2R1JmcWDyJyLna4GMxMs4r-IB62CWjJDzP0z4x-RfvS62oJTV_QWTdNhkUbqBUiFBhVVl7-ayTdtv0yCAHx1AgpRTttjFd4ziRvtuIUg-5cVTilejvGrcHV_zB-iUoIEyNw5oEixmlR__80-CEG1Fja4GkFx9ETbv2QdsGGn22U9T2_1kfEf9XhFy5c0H1qTaIr137ek9KgLguG4emUkj6MnknmSprSHbURPySNcuAKnaYYjePFPTTSIHxQDAQ7RdlJzujWuYAacOdO4OjlQdU96tb-FK2nQzFB0mP1kyhhejGrLO6YEQBgMNIDPYDYVK3XPImr1le4xw97v7k54s2XRwUVLDUrBBsR_6sfGPc5w6PWXcU0xCCQE6xc8k-0PlcVhoiKKE5NcR7Io9ysbZiHDQ4ZEgs8W44LlW2I0TToEfTCsd7SMVL661-3NGlbXia_vfdkHdIaO43IUQhItj4fYSdCnQrxiNNQbrGfbbYR_JvBxpwbGZhDHB_seCPImnEsJmlQkXq4iTbcu-MZKKdfNNg6r4tvUKDOlwIZk2aLJdfQFsuds-00lw6YiLFFgqtIm9Cqt-7iwYP_7opRD_LupUmvGOqygxSWXZTHZTDM8pQkx2lUYsCZ24Hxv9nFfbzexACj_JwPx9v2BbSHdnRQPUBEEp2WuTVHV7-PzYcr_DYEvXUb0f7YgadA34jGq1ToVfziz55WegG91abrNie8ba-Tt_a3zjW4ZzFOLOjdQx0QxY4IZk5FV__9PC9Ng">Mirage</a>.</p>\n<h2 id="compound-query"><a href="#compound-query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Compound Query</h2>\n<p>Now we shall look into a compound query where we want to get those documents which are within the specified dates and have a particular term in one of the fields. The following example will return all the documents which have <code class="gatsby-code-text">JavaScript</code> in their <code class="gatsby-code-text">language</code> field and which were <code class="gatsby-code-text">created</code> on or after <code class="gatsby-code-text">2015-10-29T14:37:16Z</code> till <code class="gatsby-code-text">2017-10-29T14:37:16Z</code>.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go">client<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> appbase<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span><span class="token string">"https://scalr.api.appbase.io"</span><span class="token punctuation">,</span> <span class="token string">"2FPZ2UJQW"</span><span class="token punctuation">,</span> <span class="token string">"1c50c6df-4652-4d74-906b-7bc0a6a731b6"</span><span class="token punctuation">,</span> <span class="token string">"gitxplore-live"</span><span class="token punctuation">)</span>\nerr <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>\n\tlog<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nfmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Client created"</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> testtype <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">"gitxplore-live"</span>\n<span class="token keyword">const</span> matchDateTermQuery <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">`{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": [\n\t\t\t\t{\n\t\t\t\t\t"range": {\n\t\t\t\t\t\t"created": {\n\t\t\t\t\t\t\t"gte": "2015-10-29T14:37:16Z",\n\t\t\t\t\t\t\t"lte": "2017-10-29T14:37:16Z"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"term": {\n\t\t\t\t\t\t"language": "javascript"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}`</span>\ndateTermQueryResponse<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span>testtype<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Body</span><span class="token punctuation">(</span>matchDateTermQuery<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>\n\tlog<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span>\n<span class="token punctuation">}</span>\nfmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Total Hits for the range of dates with JavaScript term is: "</span><span class="token punctuation">,</span> dateTermQueryResponse<span class="token punctuation">.</span>Hits<span class="token punctuation">.</span>TotalHits<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go">dateTermQueryResponse<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n\tTotal Hits <span class="token keyword">for</span> the <span class="token keyword">range</span> of dates with JavaScript term is<span class="token punctuation">:</span> <span class="token number">1022</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Play with the <code class="gatsby-code-text">Compound Query</code> on <a href="https://appbaseio.github.io/mirage/#?input_state=XQAAAAKjDQAAAAAAAAA9iIhnNAWbsswtYjeQNZkpzQK4_mOzUeDpWmFX40My38I2h2kWQlEdacvCMz6CtrX2pl2yy1LFtI8PefTkjddNtb1d4yacMv2ni8qYGp6yBtb_-oP0y6NadalvEMEYzWi_LqQ9mRe7P0mnWEZnms4MVU1rDLGSaeM2Mz8PnBpHlB8ozXiqBjd1HlXOyeHMn5YveDpjt6BIMyLyGa2t8hZgMVZjYLCqQfjpLtkwgaEOmm2R1JmcWDyJyLna4GMxMs4r-IB62CWjJFpLSDvyu_mM_MRP6uJO6YtZ1uAe6otWHfaTGdC0cxa9cI8wzgGM5DGHwlCi6yWsTDaMALy_ouzQPdvMlfC0R33CUIu4Srx5Y_RTVjfq7sgdA1pmIhH1TlbmHWFbS7Y2cSdo73pq__lkqlolbbhPZkrg5VGkcVMRnSPlXnl0R0DVyRCtRNmIufdi0SCVGdQ7UTeFQu4Mu55hvYDBx9bQDnmn65slHhyYDYPONMMTj1Zv2fSSFBPLzyjMewBW_D80IYf62i3y40sVIyl4XT8tvYfju_xNyYIzxs_CP14Tyk9Z5Uzmo2oBOkX1G2mJf_2zq2vhSPiEg5QxXeuAlBIyh7xvA2vDEhdj5jKk-c7R8YzS2u-T5zcbMi-eprfIDSqrxH-8Ut8eOMW_ADsC-VpgzMwEYDuk46L4q7SrQOwI1gkHMGUpX1qTidBjy-AxynwKD-9hDVx770vjaB5A03AoAe1DLq6lpXYtc2gZsXIXRtQJ8Wof4hvioPtuU9513JCxA-i1vLkDU7X_3H9xWUxz-y-PgqXpVb9ojze1BVplnUzZhYZKEUbQOcRNPF4oU3zBJcoRJDaONGkAmsB86bNtMiUQ9mshgjI-0aHBCu4k1zLGlLaFr0NA1l8mAlIldUZsTQp6OoBfDb7VH2mIAfcDWCacI2LpvFQyiUjtxNb5o2ZtbtN__pg0Dn013s1_aCXnYT77vE16-00EyWKlAPYAt8lDmEjStGj0kTBB6XPlZfn7Wy3eL6qFcrEyKz8KFbqe4sW6_Gr-1XNTmFnMz_88lnAA">Mirage</a>.\nWe can further extend the above query to contain more nested <code class="gatsby-code-text">bool</code> clauses. You can read more about it <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-bool-query.html">here</a>.</p>\n<h2 id="sorting-query-results"><a href="#sorting-query-results" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sorting Query Results</h2>\n<p>We need to add <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/search-request-sort.html"><code class="gatsby-code-text">sort</code></a> clause to the query to sort the <code class="gatsby-code-text">returned documents</code>. It takes <code class="gatsby-code-text">asc</code> (sorts in ascending order) or <code class="gatsby-code-text">desc</code> (sorts in descending order) as parameter to <code class="gatsby-code-text">order</code>. Say if we wanted to sort the response of our previous query in ascending order of its <code class="gatsby-code-text">created</code> date, the query would change to:</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go"><span class="token keyword">const</span> matchDateTermQuery <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">`{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": [\n\t\t\t\t{\n\t\t\t\t\t"range": {\n\t\t\t\t\t\t"created": {\n\t\t\t\t\t\t\t"gte": "2015-10-29T14:37:16Z",\n\t\t\t\t\t\t\t"lte": "2017-10-29T14:37:16Z"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"term": {\n\t\t\t\t\t\t"language": "javascript"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t"sort": [\n\t\t{\n\t\t\t"created": {\n\t\t\t\t"order": "asc"\n\t\t\t}\n\t\t}\n\t]\n}`</span>\n</code></pre>\n      </div>\n<p>Play with the <code class="gatsby-code-text">Sorting Query Results</code> on <a href="https://appbaseio.github.io/mirage/#?input_state=XQAAAAIUDgAAAAAAAAA9iIhnNAWbsswtYjeQNZkpzQK4_mOzUeDpWmFX40My38I2h2kWQlEdacvCMz6CtrX2pl2yy1LFtI8PefTkjddNtb1d4yacMv2ni8qYGp6yBtb_-oP0y6NadalvEMEYzWi_LqQ9mRe7P0mnWEZnms4MVU1rDLGSaeM2Mz8PnBpHlB8ozXiqBjd1HlXOyeHMn5YveDpjt6BIMyLyGa2t8hZgMVZjYLCqQfjpLtkwgaEOmm2R1JmcWDyJyLna4GMxMs4r-IB62CWjJFpLSDvyu_mM_MRP6uJO6YtZ1uAe6otWHfaTGdC0cxa9cI8wzgGM5DGHwlCi6yWsTDaMALy_ouzQPdvMlfC0R33CUIu4Srx5Y_RTVjfq7sgdA1pmIhH1TlbmHWFbS7Y2cSdo73pq__lkqlolbbhPZkrg5VGkcVMRnSPlXnl0R0DVyRCtRNmIufdi0SCVGdQ7UTeFQu4Mu55hvYDBx9bQDnmn65slHhyYDYPONMMTj1Zv2fSSFBPLzyjMewBW_D80IYf62i3y40sVIyl4XT8tvYfju_xNyYIzxs_CP14Tyk9Z5Uzmo2oBOkX1G2mJf_2zq2vhSPiEg5QxXeuAlBIyh7xvA2vDEhdj5jKk-c7R8YzS2u-T5zcbMi-eprfIDSqrxH-8Ut8eOMW_ADsC-VpgzMwEYDuk46L4q7SrQOwI1gkHMGUpX1qTidBjy-AxynwKD-9hDVx770vjaB5A03AoAe1DLq6lpXYtc2gZsXIXRtQJ8Wof4hvioPtuU9513JCxA-i1vLkDU7X_3H9xWUxz-y-PgqXpVb9ojze1BVplnUzZhYZKEUbQOcRNPF4oU3zBJcoRJDaONGkAmsB86bNtMiUQ9mshgjI-0aHBCu4k1zLGlLaFr0NA1l8mAlIldUZsTQp6OoBfDb7VH2mIAfcDWCacI2LpvFQyiUjtxNb5o2ZtbtN__pg0Dn01_c3h1mLOI81tetiuh8jXJbKfs-YktndNkYW3sse3idUuwAb_GiXVzPAOUyL2P0Hw5AW1USvc-jrjXpaSDvYT2FJL0KRZj5bxnz1Fw-wssO8dcdjBZUpsVW1noovQBBtB4I1a-zOtyuYoxdTmc4cXDq_8cl96">Mirage</a>.</p>\n<h2 id="match-query"><a href="#match-query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Match Query</h2>\n<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-match-query.html#query-dsl-match-query"><code class="gatsby-code-text">match</code></a> clause is a simple match query. If matches if atleast one term from the query is present. The more the match the better is its score. For example, the below <code class="gatsby-code-text">matchQuery</code> when executed will return every document which has at least one of the term from the <code class="gatsby-code-text">plugin which</code> phrase in their <code class="gatsby-code-text">description</code> field.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go"><span class="token keyword">const</span> matchQuery <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">`{\n\t"query": {\n\t\t"match": {\n\t\t\t"description": "plugin which"\n\t\t}\n\t}\n}`</span>\n</code></pre>\n      </div>\n<p>It currently returns <code class="gatsby-code-text">980</code> documents for this query.\nPlay with the <code class="gatsby-code-text">Match Query</code> on <a href="https://appbaseio.github.io/mirage/#?input_state=XQAAAAJCDAAAAAAAAAA9iIhnNAWbsswtYjeQNZkpzQK4_mOzUeDpWmFX40My38I2h2kWQlEdacvCMz6CtrX2pl2yy1LFtI8PefTkjddNtb1d4yacMv2ni8qYGp6yBtb_-oP0y6NadalvEMEYzWi_LqQ9mRe7P0mnWEZnms4MVU1rDLGSaeM2Mz8PnBpHlB8ozXiqBjd1HlXOyeHMn5YveDpjt6BIMyLyGa2t8hZgMVZjYLCqQfjpLtkwgaEOmm2R1JmcWDyJyLna4GMxMs4r-IB62CWjJFpLSDvyu_mM_MRP6uJO6YtZ1uAe6otWHfaTGdC0cxa_xsuZSsaLNpDXeiG-sabfHGofyPzN4CQFey5kqLVoxtipdBv33cZVkzZf4twuvl7RLMIfabJ4R8PrE3_Z4Ha_i4OI4voih854V3oXAZTRrNXvAOd4nGcBhbA5hsu6Y26qfBWWLY-YOah1lhtmjSpgrImPBaONMNWHZdeASE0iRsxPcExtdQ5I_77IDD-DkClmdMVu7P5H3lmsrPVXARFokIjoD3FpmTupHqWmeCsjohjtlG-bAZxVfmJXQ4LPLh8iE_IWUVwfi0XyYGIIgPjnmHwAJ-FZvO8pwXlZVmcM7ITUcjUZhceV5FYIxuRkERT5efSDx331X8o9aO4BmdDn0-IVcWs60qSUn6ZOnoeMAPRBO9oalADxIPPgFBz87BvpDrUah43Bvx5Z76ps8xOrXnFH7CM3v-wKvBRcaXMX6HeUZjhlBXu_jZcEa6Htc_GDEEcBPcpYz0vZKRXd6DhEPg42sZ-Rovw7VdU0n3ZtyQCVxZY8qCTg718tQG56hTxrHLuErFpKu4vrC4QLy3FpWxHxrx5waotKrlI7_XPoWv3vMwf79mlSlryS8y7mT22vHr9hPplTkmq2F-IVfh9vXccVUKlE49BJzEbzgWT2MLboXtIDn3JAioFw9duR4o7-6V-c">Mirage</a>.</p>\n<h3 id="match-phrase-query"><a href="#match-phrase-query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Match Phrase Query</h3>\n<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-match-query-phrase.html#query-dsl-match-query-phrase"><code class="gatsby-code-text">match_phrase</code></a> query matches only if all the terms from the query are present and in the same order. For example the below <code class="gatsby-code-text">matchPhraseQuery</code> when executed will return every document which has all of the terms from <code class="gatsby-code-text">plugin which</code> phrase and in the exact order in their <code class="gatsby-code-text">description</code> field.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go"><span class="token keyword">const</span> matchPhraseQuery <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">`{\n\t"query": {\n\t\t"match": {\n\t\t\t"description": "plugin which"\n\t\t}\n\t}\n}`</span>\n</code></pre>\n      </div>\n<p>It will return <code class="gatsby-code-text">16</code> documents for this query.\nPlay with the <code class="gatsby-code-text">Match Phrase</code> query on <a href="https://appbaseio.github.io/mirage/#?input_state=XQAAAAJXDAAAAAAAAAA9iIhnNAWbsswtYjeQNZkpzQK4_mOzUeDpWmFX40My38I2h2kWQlEdacvCMz6CtrX2pl2yy1LFtI8PefTkjddNtb1d4yacMv2ni8qYGp6yBtb_-oP0y6NadalvEMEYzWi_LqQ9mRe7P0mnWEZnms4MVU1rDLGSaeM2Mz8PnBpHlB8ozXiqBjd1HlXOyeHMn5YveDpjt6BIMyLyGa2t8hZgMVZjYLCqQfjpLtkwgaEOmm2R1JmcWDyJyLna4GMxMs4r-IB62CWjJFpLSDvyu_mM_MRP6uJO6YtZ1uAe6otWHfaTGdC0cxa_xsuZSsaLNpDXeiG-sabfHGofyPzN4CQFey5kqLVoxtjeFOBS1wgtRH20v8dO_fVXoyNW-gxcFmjOgeumWMW4kglNoWUm6DtUiOQZ1ZSNdiexjDTLyEtz0U0rD42p75o0PtSgG6vBnbYOqLn1Vk2OtRN5KKEP64-bw8BjOHpDlk_6GB-mq8BqMu9Fg9J2tYG_TnBjjgAbO7LOo8sGEY1hNwKerdwVx4xJGx1UdRthU3lagSGLkJ1BLiMbvGJ0XRY8w-G_g6qG-EBB8PhuDg3R5MExspV4oy9ipK6YOI9pJ7Qh-cBPv5ivZK33xqVbDfq5Kb97NLo4X_x3EusAH0HRbai2d1fa1n6l8oA3JDZhpy7liphWYhianp6v3urs1la2T6pVrebK4koP2H8vun4ck-VXALIWm9-sEPh4yLP13WcuDsmif9f_8tSLoPnuJvH-zcBktLAudN3npDBJyQAZ24-PMj-ub6MnjYOGmpqFdj2Ub5c6d9FDs7Vr_SUErMHvXA0DCJiI4MQRScxvX5S_IX_9CrVVroR_MZX3gyKyxLlkuzRjBt1P343LV6PXGRUhWQ_u2WdM4jkRyVZyA1Lk7Vq9KqmIBqaUV7KccWHQ6IJyK-EGUK5zVmApgT8WI-HHKSGbGJ__9j1qxg">Mirage</a>.</p>\n<h3 id="match-phrase-prefix-query"><a href="#match-phrase-prefix-query" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Match Phrase Prefix Query</h3>\n<p>The <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl-match-query-phrase-prefix.html#query-dsl-match-query-phrase-prefix"><code class="gatsby-code-text">match_phrase_prefix</code></a> query is the same as <code class="gatsby-code-text">match_phrase</code>, except that it allows for prefix matches on the last term in the text.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-go"><code class="gatsby-code-go"><span class="token keyword">const</span> matchPhraseQuery <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">`{\n\t"query": {\n\t\t"match_phrase_prefix": {\n\t\t\t"description": "and wr"\n\t\t}\n\t}\n}`</span>\n</code></pre>\n      </div>\n<p>It will return <code class="gatsby-code-text">34</code> number of documents for this query.\nPlay with the <code class="gatsby-code-text">Match Phrase Prefix Query</code> on <a href="https://appbaseio.github.io/mirage/#?input_state=XQAAAAJ0DAAAAAAAAAA9iIhnNAWbsswtYjeQNZkpzQK4_mOzUeDpWmFX40My38I2h2kWQlEdacvCMz6CtrX2pl2yy1LFtI8PefTkjddNtb1d4yacMv2ni8qYGp6yBtb_-oP0y6NadalvEMEYzWi_LqQ9mRe7P0mnWEZnms4MVU1rDLGSaeM2Mz8PnBpHlB8ozXiqBjd1HlXOyeHMn5YveDpjt6BIMyLyGa2t8hZgMVZjYLCqQfjpLtkwgaEOmm2R1JmcWDyJyLna4GMxMs4r-IB62CWjJFpLSDvyu_mM_MRP6uJO6YtZ1uAe6otWHfaTGdC0cxa_xsuZSsaLNpDXeiG-sabfHGofyPzN4CQFey5kqLVoxtjiUWsuOyxZujQoHYJp27YL_J3-K3PDEm78TGLIbspUsliRHA10weYS2BFSn7RnHigWnPoi7y49tk09MUzI_3pLAM-ykhu_ZLRJQ5qUZarzjC-pZVeW1Kcyfgr5UihbKq5--pm2WB-Pu4quy4qf9cYqxUAKdiTEGDuSs-S44iOzy08p7T2DszuM_loqkRDWFcf4xCZ-U10wyDDA2yCpNBQV12L-NeBFaVBx5aD2omvJJSackVZ-UqoivC_Rppuqongd-dNBF2SzmywAtGmGl12awbDvAXdEGGuxZdpiHbdM4IgtWM2qGjbH68QJBJDCjNzNq7egwzah9YK4f9EX7HK6_Di3rehkolys7w_7skPy1sGfKQzLT_9ttGOHSU16We9HBGD7k2Aa7T6u23Au0SupCXHY4MnjkhZtMhTXOdEjKha6t_EvYtKJ4tsBlRkj7uB5lfDNrdO9Xn2qyxWMlQ0nm1B1VW74Aau-r0H47kfRkvWNRDVU5tcRWJLj11Y9yKAZn6rHUvUFe1Fw-ZI0kbborzxvZEVCBX-RqI22sql-gBBN9c_xe93-Tt1jC6HPFVZeEqW3xcO9Simh2UKWFbS4VbXtPqPtnQz_0TQuBY8JUvlF5S_UQf7A2zg">Mirage</a>.</p>\n<p>In this article, we showed examples of how to work with <code class="gatsby-code-text">term</code>, <code class="gatsby-code-text">match</code>, <code class="gatsby-code-text">match_phrase</code>, <code class="gatsby-code-text">match_phrase_prefix</code>, <code class="gatsby-code-text">range</code> and <code class="gatsby-code-text">compound</code> queries. You can learn more about the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/query-dsl.html">Elasticsearch Query DSL here</a>.</p>',frontmatter:{title:"Queries With Go",next:null,prev:"go-quickstart.html",nextTitle:null,prevTitle:"Golang Quickstart"},fields:{path:"docs/golang/go-queries.md",slug:"go-queries.html"}}},pathContext:{slug:"go-queries.html"}}}});
//# sourceMappingURL=path---go-queries-html-d819c4086d98f6ce7d7f.js.map